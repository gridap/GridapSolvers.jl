name: CI-External-Libraries
on:
  push:
    branches:
      - main
    tags: ['*']
    paths-ignore:
      - 'NEWS.md'
      - 'README.md'
      - 'LICENSE.md'
  pull_request:
    paths-ignore:
      - 'NEWS.md'
      - 'README.md'
      - 'LICENSE.md'
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: External Libraries - Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    env:
      P4EST_ROOT_DIR: "/opt/p4est/2.8.5/"
      JULIA_PETSC_LIBRARY: "/opt/petsc/3.22.4/lib/libpetsc"
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
        os:
          - ubuntu-latest
        arch:
          - x64
        testcase:
          - extlibs
    steps:
      - name: Install p4est/petsc dependencies
        run: |
           sudo apt-get update 
           sudo apt-get install -y wget gfortran g++ openmpi-bin libopenmpi-dev 
      - name: Install p4est
        run: |
          # Install p4est 2.8.5 from sources
          CURR_DIR=$(pwd)
          PACKAGE=p4est
          VERSION=2.8.5
          INSTALL_ROOT=/opt
          P4EST_INSTALL=$INSTALL_ROOT/$PACKAGE/$VERSION
          TAR_FILE=$PACKAGE-$VERSION.tar.gz
          URL="https://github.com/p4est/p4est.github.io/raw/master/release"
          ROOT_DIR=/tmp
          SOURCES_DIR=$ROOT_DIR/$PACKAGE-$VERSION
          BUILD_DIR=$SOURCES_DIR/build
          wget -q $URL/$TAR_FILE -O $ROOT_DIR/$TAR_FILE
          mkdir -p $SOURCES_DIR
          tar xzf $ROOT_DIR/$TAR_FILE -C $SOURCES_DIR --strip-components=1
          cd $SOURCES_DIR
          ./configure --prefix=$P4EST_INSTALL --without-blas --without-lapack --enable-mpi -disable-dependency-tracking
          make --quiet
          make --quiet install
          rm -rf $ROOT_DIR/$TAR_FILE $SOURCES_DIR
          cd $CURR_DIR
      - name: Install petsc
        run: |
          CURR_DIR=$(pwd)
          PACKAGE=petsc
          VERSION=3.22.4
          INSTALL_ROOT=/opt
          PETSC_INSTALL=$INSTALL_ROOT/$PACKAGE/$VERSION
          TAR_FILE=$PACKAGE-$VERSION.tar.gz
          URL="https://web.cels.anl.gov/projects/petsc/download/release-snapshots/"
          ROOT_DIR=/tmp
          SOURCES_DIR=$ROOT_DIR/$PACKAGE-$VERSION
          BUILD_DIR=$SOURCES_DIR/build
          wget -q $URL/$TAR_FILE -O $ROOT_DIR/$TAR_FILE
          mkdir -p $SOURCES_DIR
          tar xzf $ROOT_DIR/$TAR_FILE -C $SOURCES_DIR --strip-components=1
          cd $SOURCES_DIR
          ./configure --prefix=$PETSC_INSTALL --with-cc=mpicc --with-cxx=mpicxx --with-fc=mpif90 \
             --download-mumps --download-scalapack --download-parmetis --download-metis \
             --download-fblaslapack --download-ptscotch --download-hpddm --download-slepc \
             --with-debugging --with-x=0 --with-shared=1 \
             --with-mpi=1 --with-64-bit-indices
          make
          make install
          cd $CURR_DIR
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - name: add MPIPreferences and external packages
        shell: julia --color=yes --project=. {0}
        run: |
          using Pkg
          Pkg.add("MPIPreferences")
      - name: use MPI system binary 
        shell: julia --color=yes --project=. {0}
        run: |
          using MPIPreferences
          MPIPreferences.use_system_binary()
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@v1
        env:
          TESTCASE: ${{ matrix.testcase }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: test-extlibs
